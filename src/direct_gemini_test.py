# direct_gemini_test.py\n\nimport os\nimport google.generativeai as genai\n\n# Set the API key\nos.environ["GOOGLE_API_KEY"] = "YOUR_GOOGLE_API_KEY_HERE"\napi_key = os.environ.get('GOOGLE_API_KEY')\n\nprint(\"API Key set:\", \"Yes\" if api_key else \"No\")\n\nif api_key:\n    try:\n        # Configure the Google Generative AI client\n        genai.configure(api_key=api_key)\n        print(\"Google Generative AI configured successfully\")\n        \n        # List available models\n        print(\"\\nAvailable models:\")\n        for model in genai.list_models():\n            if 'generateContent' in model.supported_generation_methods:\n                print(f\"  - {model.name}\")\n        \n        # Try to use the gemini-pro model\n        model = genai.GenerativeModel('gemini-pro')\n        print(\"\\nGemini Pro model loaded successfully\")\n        \n        # Test with a simple prompt\n        response = model.generate_content(\"Say hello world in one word\")\n        print(f\"Response: {response.text}\")\n        \n    except Exception as e:\n        print(f\"Error: {e}\")\n        import traceback\n        traceback.print_exc()\nelse:\n    print(\"API key not found\")